% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/winik.R
\docType{class}
\name{winik}
\alias{winik}
\title{Winik}
\description{
This is an object that represents a villager (winik).
}
\details{
This class acts as an abstraction for handling villager-level logic. It can take a number of functions that run at each timestep. It
also has an associated
}
\section{Methods}{

\describe{
\item{\code{initialize()}}{Create a new winik}
\item{\code{get_gender()}}{}
\item{\code{propegate()}}{Unknown}
\item{\code{add_partner()}}{Adds a partner to the wink}
\item{\code{get_age()}}{Returns age in terms of years}
\item{\code{as_tibble()}}{Represents the current state of the winik as a tibble}
}
Create a new winik
}

\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{identifier}}{A unique identifier that can be used to identify and find the winik}

\item{\code{first_name}}{The winik's first name}

\item{\code{last_name}}{The winik's last name}

\item{\code{age}}{The winik's age}

\item{\code{mother_id}}{The identifier of the winik's mother}

\item{\code{father_id}}{The identifier of the winik's father}

\item{\code{profession}}{The winik's profession}

\item{\code{partner}}{The identifier of the winik's partner}

\item{\code{gender}}{The winik's gender}

\item{\code{alive}}{A boolean flag that represents whether the villager is alive or dead}

\item{\code{children}}{A list of children identifiers}

\item{\code{models}}{Unknown}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{winik$new()}}
\item \href{#method-get_gender}{\code{winik$get_gender()}}
\item \href{#method-get_profession}{\code{winik$get_profession()}}
\item \href{#method-propegate}{\code{winik$propegate()}}
\item \href{#method-is_alive}{\code{winik$is_alive()}}
\item \href{#method-has_child}{\code{winik$has_child()}}
\item \href{#method-add_partner}{\code{winik$add_partner()}}
\item \href{#method-get_age}{\code{winik$get_age()}}
\item \href{#method-as_tibble}{\code{winik$as_tibble()}}
\item \href{#method-clone}{\code{winik$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$new(
  first_name = NA,
  last_name = NA,
  age = 0,
  mother_id = NULL,
  father_id = NULL,
  partner = NULL,
  children = list(),
  gender = NULL,
  models = vector()
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{first_name}}{The winik's first name}

\item{\code{last_name}}{The winik's last naem}

\item{\code{age}}{The age of the winik}

\item{\code{mother_id}}{The identifier of the winik's monther}

\item{\code{father_id}}{The identifier of the winik' father}

\item{\code{partner}}{The identifier of the winik's partner}

\item{\code{children}}{A list of identifiers of the children from this winik}

\item{\code{gender}}{The gender of the winik}

\item{\code{models}}{Unknown

Gets a random number between 0 and 1; Treat
0: female
1: male}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_gender"></a>}}
\if{latex}{\out{\hypertarget{method-get_gender}{}}}
\subsection{Method \code{get_gender()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$get_gender()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A string representing the gender
Gets a random number between 0 and 1; Treat that as
0: farmer
1: fisher
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_profession"></a>}}
\if{latex}{\out{\hypertarget{method-get_profession}{}}}
\subsection{Method \code{get_profession()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$get_profession()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A string representing a profession
Advance one time step
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-propegate"></a>}}
\if{latex}{\out{\hypertarget{method-propegate}{}}}
\subsection{Method \code{propegate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$propegate()}\if{html}{\out{</div>}}
}

\subsection{Details}{
We need to think about how to make this flexible for people to use
A function that returns true or false whether the villager dies
This is run each day
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_alive"></a>}}
\if{latex}{\out{\hypertarget{method-is_alive}{}}}
\subsection{Method \code{is_alive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$is_alive()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A boolean whether the winik is alive (true for yes)
If certain conditions are met, create a new child and connect its properties to the mother and father
Poorly named function
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-has_child"></a>}}
\if{latex}{\out{\hypertarget{method-has_child}{}}}
\subsection{Method \code{has_child()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$has_child()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new winik that's a child of this one
Adds a partner to the villager
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_partner"></a>}}
\if{latex}{\out{\hypertarget{method-add_partner}{}}}
\subsection{Method \code{add_partner()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$add_partner(new_partner, add_back = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{new_partner}}{The identifier of the partner winik}

\item{\code{add_back}}{Adds this winik's identifier to the other winik
Because age is stored as days, convert it to years}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_age"></a>}}
\if{latex}{\out{\hypertarget{method-get_age}{}}}
\subsection{Method \code{get_age()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$get_age()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The age of the winik in years
Returns a tibble representation of the winik
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-as_tibble"></a>}}
\if{latex}{\out{\hypertarget{method-as_tibble}{}}}
\subsection{Method \code{as_tibble()}}{
I hope there's a more scaleable way to do this in R; Adding every new attribute to this
function isn't practical
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$as_tibble()}\if{html}{\out{</div>}}
}

\subsection{Details}{
The village_state holds a copy of all of the villagers at each timestep; this method is used to turn
the winik properties into the object insertedin the villag_state.
}

\subsection{Returns}{
A tibble representation of the winik
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{winik$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
